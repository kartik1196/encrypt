/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2018-02-22 08:50:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.sql.*;
import java.io.*;
import java.util.*;
import java.security.Key;
import java.util.Random;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import org.bouncycastle.util.encoders.Base64;
import java.sql.*;
import java.util.Random;
import java.security.Key;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import javax.crypto.Cipher;
import java.sql.*;
import java.util.*;

public final class Download1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/connect.jsp", Long.valueOf(1519289292650L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>Attribute-based Encryption</title>\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>Attribute-based Encryption</title>\r\n");
      out.write("\r\n");

	Connection connection = null;
 	try {
     	// ORACLE DBASE CONECTIVITY
		/*
      	Class.forName("oracle.jdbc.driver.OracleDriver");
      	DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
		connection =  DriverManager.getConnection ("jdbc:oracle:thin:@localhost:1521:insurance","scott", "tiger");   
	
      	//MY SQL DBASE CONNECTIVITY 

       	Class.forName("com.mysql.jdbc.Driver");
       	Connection=DriverManager.getConnection("jdbc:mysql://localhost:5053/AMES");

		*/

  		// MS ACCESS and MYSQL DBASE CONNECTIVITY

	  	Class.forName("com.mysql.jdbc.Driver");	
		connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/audithos","root","password");
      	String sql="";

	}
	catch(Exception e)
	{
		System.out.println(e);
	}

      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/coin-slider.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/cufon-yui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/cufon-ptsans.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery-1.4.2.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/script.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/coin-slider.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("<!--\r\n");
      out.write(".style1 {font-size: 18px}\r\n");
      out.write(".style8 {font-size: 24px}\r\n");
      out.write("-->\r\n");
      out.write("</style>\r\n");
      out.write("<script language=\"javascript\" type='text/javascript'>\r\n");
      out.write("function loadFileAsText()\r\n");
      out.write("{\r\n");
      out.write("\tvar fileToLoad = document.getElementById(\"file\").files[0];\r\n");
      out.write("\r\n");
      out.write("\tvar fileReader = new FileReader();\r\n");
      out.write("\tfileReader.onload = function(fileLoadedEvent) \r\n");
      out.write("\t{\r\n");
      out.write("\t\tvar textFromFileLoaded = fileLoadedEvent.target.result;\r\n");
      out.write("\t\tdocument.getElementById(\"textarea\").value = textFromFileLoaded;\r\n");
      out.write("\t};\r\n");
      out.write("\tfileReader.readAsText(fileToLoad, \"UTF-8\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script type='text/javascript'>\r\n");
      out.write("\r\n");
      out.write("function saveTextAsFile()\r\n");
      out.write("{\r\n");
      out.write("\tvar textToWrite = document.getElementById(\"textarea\").value;\r\n");
      out.write("\tvar textFileAsBlob = new Blob([textToWrite], {type:'text/plain'});\r\n");
      out.write("\tvar fileNameToSaveAs = \"File.txt\";\r\n");
      out.write("\r\n");
      out.write("\tvar downloadLink = document.createElement(\"a\");\r\n");
      out.write("\tdownloadLink.download = fileNameToSaveAs;\r\n");
      out.write("\tdownloadLink.innerHTML = \"Download File\";\r\n");
      out.write("\tif (window.webkitURL != null)\r\n");
      out.write("\t{\r\n");
      out.write("\t\t// Chrome allows the link to be clicked\r\n");
      out.write("\t\t// without actually adding it to the DOM.\r\n");
      out.write("\t\tdownloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\r\n");
      out.write("\t}\r\n");
      out.write("\telse\r\n");
      out.write("\t{\r\n");
      out.write("\t\t// Firefox requires the link to be added to the DOM\r\n");
      out.write("\t\t// before it can be clicked.\r\n");
      out.write("\t\tdownloadLink.href = window.URL.createObjectURL(textFileAsBlob);\r\n");
      out.write("\t\tdownloadLink.onclick = destroyClickedElement;\r\n");
      out.write("\t\tdownloadLink.style.display = \"none\";\r\n");
      out.write("\t\tdocument.body.appendChild(downloadLink);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tdownloadLink.click();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function destroyClickedElement(event)\r\n");
      out.write("{\r\n");
      out.write("\tdocument.body.removeChild(event.target);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"main\">\r\n");
      out.write("  <div class=\"header\">\r\n");
      out.write("    <div class=\"header_resize\">\r\n");
      out.write("      <div class=\"logo\">\r\n");
      out.write("\r\n");
      out.write("        <h1 class=\"style1\"><a href=\"index.html\">Attribute-based Encryption</a></h1>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"menu_nav\">\r\n");
      out.write("        <ul>\r\n");
      out.write("          <li><a href=\"DataOwner.html\">DATA OWNER</a></li>\r\n");
      out.write("          <li><a href=\"CloudServer.html\">CLOUD SERVER</a></li>\r\n");
      out.write("          <li><a href=\"KDC.html\">AUTHORITY</a></li>\r\n");
      out.write("         <li><a href=\"EndUser.html\">END USER</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"content\">\r\n");
      out.write("    <div class=\"content_resize\">\r\n");
      out.write("      <div class=\"mainbar\">\r\n");
      out.write("        <div class=\"article\">\r\n");
      out.write("\t\t<p>");

		  	
		    	try 
				{
		  		String file = request.getParameter("t1");
				String user = request.getParameter("t2");
				String sk=request.getParameter("t13");
				
				System.out.println(file);
				System.out.println(user);
				System.out.println(sk);
				
				
				String keys = "ef50a0ef2c3e3a5f";
				String ct=null;
				String s1=null;
				String s2=null;
				String s3=null;
				String s4=null;
				application.setAttribute("file",file);
				application.setAttribute("sk",sk);
				
				byte[] keyValue = keys.getBytes();
      			Key key = new SecretKeySpec(keyValue, "AES");
      			Cipher c = Cipher.getInstance("AES");
      			c.init(Cipher.ENCRYPT_MODE, key);
      			String filename = new String(Base64.encode(file.getBytes()));
				
				String strQuery = "select * from request where user='"+user+"' and fname='"+file+"' and  sk='"+sk+"'";
				String strQuery1 = "select * from cloudserver where fname='"+file+"'";
				
				ResultSet rs = connection.createStatement().executeQuery(strQuery);
				{
					if(rs.next()==true)
					{
						s1=rs.getString(2);
						s2=rs.getString(4);
						s3=rs.getString(5);
					ResultSet rs1 = connection.createStatement().executeQuery(strQuery1);
					{
					if(rs1.next()==true)
					{
						s4=rs1.getString(2);		
						ct=rs1.getString(4);
						//System.out.println(ct);
						byte[] keyValue1 = keys.getBytes();
      					Key key1 = new SecretKeySpec(keyValue1,"AES");
      					Cipher c1 = Cipher.getInstance("AES");
      					c1.init(Cipher.DECRYPT_MODE, key1);
      					String decryptedValue = new String(Base64.encode(ct.getBytes()));
				
						
			
      out.write("</p>\r\n");
      out.write("          <h2><span>Encrypt File  ::  </span></h2>\r\n");
      out.write("          <div class=\"clr\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"article\">\r\n");
      out.write("         \r\n");
      out.write("            <label>\r\n");
      out.write("            <p align=\"center\" class=\"style8\">File Contents</p>\r\n");
      out.write("            <label>\r\n");
      out.write("            <div align=\"center\">\r\n");
      out.write("              <textarea name=\"text\" id=\"textarea\" cols=\"45\" rows=\"17\" value=\"\">");
      out.print(decryptedValue);
      out.write("</textarea>\r\n");
      out.write("              <br/>\r\n");
      out.write("              <br/>\r\n");
      out.write("              <form action=\"verify.jsp\" method=\"post\">\r\n");
      out.write("              <input type=\"hidden\" name=\"uname\" value=\"");
      out.print(s1);
      out.write("\"/>\r\n");
      out.write("              <input type=\"hidden\" name=\"fname\" value=\"");
      out.print(s2);
      out.write("\"/>\r\n");
      out.write("              <input type=\"hidden\" name=\"key\" value=\"");
      out.print(s3);
      out.write("\"/>\r\n");
      out.write("              <input type=\"hidden\" name=\"efname2\" value=\"");
      out.print(s4);
      out.write("\"/>\r\n");
      out.write("              <input type=\"hidden\" name=\"data\" value=\"");
      out.print(ct);
      out.write("\"/>\r\n");
      out.write("              <input type=\"text\" name=\"pass\" required/>\r\n");
      out.write("              <input type=\"submit\" name=\"Submit\" value=\"Decrypt\" /> <!-- onclick=\"saveTextAsFile()\" --> \r\n");
      out.write("              </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <p align=\"left\">\r\n");
      out.write("              ");
	
					}
					else
					{
						
		
      out.write("\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"style8\">File Doesn't Exist !!!</p>\r\n");
      out.write("            </p>\r\n");
      out.write("            <br />\r\n");
      out.write("            <p><a href=\"Download.jsp\">Back</a></p>\r\n");
      out.write("            ");

					}
				}
	 			}else
					{
						SimpleDateFormat sdfDate = new SimpleDateFormat("dd/MM/yyyy");
						SimpleDateFormat sdfTime = new SimpleDateFormat("HH:mm:ss");

						Date now = new Date();
		
						String strDate = sdfDate.format(now);
						String strTime = sdfTime.format(now);
						String dt = strDate + "   " + strTime;
				
						String strQuery2 = "insert into attacker(user,fname,sk,dt) values('"+user+"','"+file+"','"+sk+"','"+dt+"')";
						connection.createStatement().executeUpdate(strQuery2);
						
		
      out.write("\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"style8\">File Name / Secret Key Mismatch  !!!</p>\r\n");
      out.write("            <p class=\"style8\">You Are An Attacker </p>\r\n");
      out.write("            </p>\r\n");
      out.write("            <br />\r\n");
      out.write("            <p><a href=\"Download.jsp\">Back</a></p>\r\n");
      out.write("            ");

		}
		}
        connection.close();
		  } 
          catch(Exception e)
          {
            out.println(e.getMessage());
          }

      out.write("\r\n");
      out.write("\r\n");
      out.write("            </label>\r\n");
      out.write("         \r\n");
      out.write("          <p>&nbsp;</p>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"sidebar\">\r\n");
      out.write("        <div class=\"searchform\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"clr\"></div>\r\n");
      out.write("        <div class=\"gadget\">\r\n");
      out.write("          <h2 class=\"star\"><span>End User   </span> Menu</h2>\r\n");
      out.write("          <div class=\"clr\"></div>\r\n");
      out.write("          <ul class=\"sb_menu\">\r\n");
      out.write("            <li><a href=\"Request.jsp\">REQUEST SECRET KEY</a></li>\r\n");
      out.write("            <li><a href=\"SecretKey.jsp\">FIND SERCET KEY</a></li>\r\n");
      out.write("            <li><a href=\"Download.jsp\">DOWNLOAD </a></li>\r\n");
      out.write("            <li><a href=\"index.html\">LOG OUT</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"clr\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div align=center></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
